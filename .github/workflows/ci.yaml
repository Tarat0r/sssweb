name: CI / CD

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rust:
    name: Lint & test (workspace)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check
      - run: cargo clippy --workspace --all-targets -- -D warnings
      - run: cargo test --workspace --all-features --verbose

  wasm:
    name: Build Yew WASM app
    runs-on: ubuntu-latest
    needs: rust
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
            sssweb
      - uses: taiki-e/install-action@v2
        with:
          tool: trunk
      - name: Build (release) with public URL for GitHub Pages
        working-directory: sssweb
        run: |
          trunk build --release --public-url "/${{ github.event.repository.name }}/"
          # SPA fallback so refresh/deep links work on GH Pages
          cp dist/index.html dist/404.html
      # Upload the artifact for the deploy job (skip only for PRs)
      - name: Upload Pages artifact
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: sssweb/dist

  deploy:
    name: Deploy to GitHub Pages
    needs: [rust, wasm]
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && needs.rust.result == 'success' && needs.wasm.result == 'success' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/configure-pages@v5
      - id: deployment
        uses: actions/deploy-pages@v4

  release:
    name: Create GitHub Release
    needs: [rust, wasm]
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') && needs.rust.result == 'success' && needs.wasm.result == 'success' }}
    permissions:
      contents: write # required to create a release
    steps:
      - uses: actions/checkout@v4
      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
